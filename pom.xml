<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.alisonyu</groupId>
    <artifactId>airforce</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <encoding>UTF-8</encoding>
        <vertx.version>3.6.2</vertx.version>
        <micrometer.version>1.1.0</micrometer.version>
    </properties>

    <dependencies>

        <!--vertx依赖-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rx-java2</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-circuit-breaker</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-micrometer-metrics</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-influx</artifactId>
            <version>${micrometer.version}</version>
        </dependency>


        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-dropwizard-metrics</artifactId>
            <version>3.6.2</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-thymeleaf</artifactId>
            <version>${vertx.version}</version>
        </dependency>





        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-micrometer-metrics</artifactId>-->
            <!--<version>${vertx.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>io.micrometer</groupId>-->
            <!--<artifactId>micrometer-registry-prometheus</artifactId>-->
            <!--<version>1.1.0</version>-->
        <!--</dependency>-->



        <!--&lt;!&ndash; The client &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.prometheus</groupId>-->
            <!--<artifactId>simpleclient</artifactId>-->
            <!--<version>0.6.0</version>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; Hotspot JVM metrics&ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.prometheus</groupId>-->
            <!--<artifactId>simpleclient_hotspot</artifactId>-->
            <!--<version>0.6.0</version>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; Exposition HTTPServer&ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.prometheus</groupId>-->
            <!--<artifactId>simpleclient_httpserver</artifactId>-->
            <!--<version>0.6.0</version>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; Pushgateway exposition&ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.prometheus</groupId>-->
            <!--<artifactId>simpleclient_pushgateway</artifactId>-->
            <!--<version>0.6.0</version>-->
        <!--</dependency>-->




        <!--zookeeper相关依赖 -->

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-zookeeper</artifactId>
            <version>${vertx.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- jsr311注解 -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.11</version>
        </dependency>


        <!--主要用于enhance和反射调用-->
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>reflectasm</artifactId>
            <version>1.11.7</version>
        </dependency>

        <!--使用fst进行序列化和反序列化-->
        <dependency>
            <groupId>de.ruedigermoeller</groupId>
            <artifactId>fst</artifactId>
            <version>2.57</version>
        </dependency>

        <!--测试用依赖-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- mock -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>2.0.2-beta</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!--指定编译的java版本和编码-->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>